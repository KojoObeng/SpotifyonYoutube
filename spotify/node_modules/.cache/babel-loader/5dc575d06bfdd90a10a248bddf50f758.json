{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kwadw\\\\OneDrive\\\\Documents\\\\Grind\\\\Projects\\\\React Projects\\\\Spotify\\\\spotify\\\\src\\\\pages\\\\youtube.js\";\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport PlaylistButton from \"../components/PlaylistButton\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\nimport \"../css/pickPlaylist.css\";\n\nclass Youtube extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apiKey: \"AIzaSyAUlBPBvCwXcYNNahVcmWPKphhIs4YjaWQ\",\n      // search_terms: this.props.location.tracks.map((track) => {\n      //     return track.artists[0] + \" \" + track.track_name;\n      // }),\n      query_IDs: []\n    };\n    const opts = {\n      height: '400',\n      width: '640',\n      playerVars: {\n        enablejsapi: 1,\n        playlist: []\n      }\n    };\n    this.search = this.search.bind(this);\n  }\n\n  componentDidMount() {\n    // this.state.search_terms.forEach((search_term, index) => {\n    //     this.search(search_term, index)\n    //     console.log(search_term, index)\n    // })\n    if (!document.getElementsByTagName('script')) {\n      const tag = document.createElement('script');\n      tag.src = 'https://www.youtube.com/iframe_api';\n      const firstScriptTag = document.getElementsByTagName('script')[0];\n      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n\n      window.onYouTubeIframeAPIReady = e => {\n        this.YT = window.YT;\n        this.player = new window.YT.Player('player', {\n          height: '660',\n          width: '1450',\n          videoId: 'M7lc1UVf-VE',\n          events: {\n            'onReady': this.onPlayerReady,\n            'onStateChange': this.onPlayerStateChange\n          }\n        });\n      };\n    }\n  }\n\n  onPlayerStateChange(e) {\n    if (e.data === window.YT.PlayerState.PLAYING) {\n      console.log('playing');\n    }\n  }\n\n  onPlayerReady(e) {\n    e.target.playVideo();\n  }\n\n  async search(query, index) {\n    await axios.get(\"https://www.googleapis.com/youtube/v3/search?key=\" + this.state.apiKey + \"&q=\" + query + \"&part=snippet&maxResults=2&type=video\").then(response => {\n      this.setState({\n        query_IDs: this.state.query_IDs.push([index, query, response.data.items[0].id.videoId])\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/pickPlaylist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"spotify-youtube-back-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, \"Back\")), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"player\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 18\n      }\n    }));\n  }\n\n}\n\nexport default Youtube; // https://github.com/tjallingt/react-youtube","map":{"version":3,"sources":["C:/Users/Kwadw/OneDrive/Documents/Grind/Projects/React Projects/Spotify/spotify/src/pages/youtube.js"],"names":["axios","React","Component","PlaylistButton","Link","Button","Youtube","constructor","props","state","apiKey","query_IDs","opts","height","width","playerVars","enablejsapi","playlist","search","bind","componentDidMount","document","getElementsByTagName","tag","createElement","src","firstScriptTag","parentNode","insertBefore","window","onYouTubeIframeAPIReady","e","YT","player","Player","videoId","events","onPlayerReady","onPlayerStateChange","data","PlayerState","PLAYING","console","log","target","playVideo","query","index","get","then","response","setState","push","items","id","catch","error","render"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport PlaylistButton from \"../components/PlaylistButton\"\r\nimport {Link} from \"react-router-dom\"\r\nimport { Button } from \"react-bootstrap\";\r\nimport \"../css/pickPlaylist.css\"\r\n\r\nclass Youtube extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            apiKey: \"AIzaSyAUlBPBvCwXcYNNahVcmWPKphhIs4YjaWQ\",\r\n            // search_terms: this.props.location.tracks.map((track) => {\r\n            //     return track.artists[0] + \" \" + track.track_name;\r\n            // }),\r\n            query_IDs: [],\r\n        }\r\n        const opts = {\r\n            height: '400',\r\n            width: '640',\r\n            playerVars: {\r\n                enablejsapi: 1,\r\n                playlist: [],\r\n            }\r\n        }\r\n\r\n        this.search = this.search.bind(this)\r\n    }\r\n    componentDidMount() {\r\n        \r\n        // this.state.search_terms.forEach((search_term, index) => {\r\n        //     this.search(search_term, index)\r\n        //     console.log(search_term, index)\r\n        // })\r\n        if (!document.getElementsByTagName('script')) {\r\n            const tag = document.createElement('script');\r\n            tag.src = 'https://www.youtube.com/iframe_api';\r\n            const firstScriptTag = document.getElementsByTagName('script')[0];\r\n            firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n            window.onYouTubeIframeAPIReady = (e) => {\r\n                this.YT = window.YT;\r\n                this.player = new window.YT.Player('player', {\r\n                    height: '660',\r\n                    width: '1450',\r\n                    videoId: 'M7lc1UVf-VE',\r\n                    events: {\r\n                        'onReady': this.onPlayerReady,\r\n                        'onStateChange': this.onPlayerStateChange\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    onPlayerStateChange(e) {\r\n        if (e.data === window.YT.PlayerState.PLAYING) {\r\n            console.log('playing')\r\n        }\r\n    }\r\n\r\n    onPlayerReady(e) {\r\n        e.target.playVideo();\r\n    }\r\n    async search(query, index) {\r\n        await axios\r\n        .get(\"https://www.googleapis.com/youtube/v3/search?key=\" + this.state.apiKey + \"&q=\" + query + \"&part=snippet&maxResults=2&type=video\")\r\n        .then((response) => {\r\n            this.setState({\r\n                 query_IDs: this.state.query_IDs.push([index, query, response.data.items[0].id.videoId])\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n        });\r\n    } \r\n    render() {\r\n        return(\r\n            <div>\r\n                <Link to=\"/pickPlaylist\">\r\n                    <Button className=\"spotify-youtube-back-button\">\r\n                        Back\r\n                    </Button>\r\n                </Link>\r\n                 <div id=\"player\"></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n  \r\n\r\nexport default Youtube\r\n\r\n// https://github.com/tjallingt/react-youtube"]},"metadata":{},"sourceType":"module"}