{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kwadw\\\\OneDrive\\\\Documents\\\\Grind\\\\Projects\\\\React Projects\\\\Spotify\\\\spotify\\\\src\\\\components\\\\PlaylistButton.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Spotify from \"spotify-web-api-js\";\nimport { Button } from \"react-bootstrap\";\nimport \"../css/pickPlaylist.css\";\nconst spotifyWebApi = new Spotify();\n\nclass PlaylistButton extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tracks: [],\n      numOfTracks: 0\n    };\n    this.handleClick.bind(this);\n  }\n\n  handleClick(playlistID) {\n    this.tracklist = [];\n    this.tracks = [];\n    this.tracklists = [];\n    this.numOfTracks = 0;\n    spotifyWebApi.getPlaylistTracks(playlistID).then(response => {\n      this.numOfTracks = response.total;\n      this.loop(this.numOfTracks, playlistID); // this.tracks.forEach((number) => {\n      //     this.tracks[number] = spotifyWebApi.getPlaylistTracks(playlistID, {offset: number*100})\n    });\n  }\n\n  async loop(number, ID) {\n    for (let i = 0; i < Math.ceil(number / 100); i++) {\n      var r = await spotifyWebApi.getPlaylistTracks(ID, {\n        offset: i * 100\n      }).then(response => {\n        return response;\n      });\n      this.tracks.push(r);\n    }\n\n    this.tracks = this.tracks.map(hundred_tracks => {\n      return hundred_tracks.items;\n    });\n    this.tracks = [].concat.apply([], this.tracks);\n    console.log(this.tracks);\n    console.log(this.tracks.map(item => {\n      return {\n        album_name: item.track.album.name,\n        album_images: item.track.album.images,\n        artists: item.track.artists.map(artist => {\n          return artist.name;\n        }),\n        duration: item.track.duration_ms,\n        track_name: item.track.name,\n        date: item.added_at\n      };\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"playlist-button-and-image-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"playlist-button\",\n      onClick: () => {\n        this.handleClick(this.props.id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, this.props.name), /*#__PURE__*/React.createElement(\"img\", {\n      className: \"playlist-image\",\n      src: this.props.image,\n      alt: this.props.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: \"/youtube\",\n        playlist: \"x\",\n        tracks: this.state.tracks\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }));\n  }\n\n} // <Button className=\"playlist-number\">{this.props.index} </Button>\n\n\nexport default PlaylistButton;","map":{"version":3,"sources":["C:/Users/Kwadw/OneDrive/Documents/Grind/Projects/React Projects/Spotify/spotify/src/components/PlaylistButton.js"],"names":["React","Component","Link","Spotify","Button","spotifyWebApi","PlaylistButton","constructor","props","state","tracks","numOfTracks","handleClick","bind","playlistID","tracklist","tracklists","getPlaylistTracks","then","response","total","loop","number","ID","i","Math","ceil","r","offset","push","map","hundred_tracks","items","concat","apply","console","log","item","album_name","track","album","name","album_images","images","artists","artist","duration","duration_ms","track_name","date","added_at","render","id","image","pathname","playlist"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {Link} from \"react-router-dom\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Spotify from \"spotify-web-api-js\";\r\nimport {\r\n    Button\r\n  } from \"react-bootstrap\";\r\nimport \"../css/pickPlaylist.css\"\r\n\r\nconst spotifyWebApi = new Spotify();\r\n\r\nclass PlaylistButton extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tracks: [],\r\n            numOfTracks: 0,\r\n        }\r\n        this.handleClick.bind(this);\r\n    }\r\n    handleClick(playlistID) {\r\n        this.tracklist = [];\r\n        this.tracks = [];\r\n        this.tracklists = [];\r\n        this.numOfTracks = 0\r\n        spotifyWebApi.getPlaylistTracks(playlistID).then((response) => {\r\n            this.numOfTracks = response.total\r\n            this.loop(this.numOfTracks, playlistID)\r\n\r\n            // this.tracks.forEach((number) => {\r\n            //     this.tracks[number] = spotifyWebApi.getPlaylistTracks(playlistID, {offset: number*100})\r\n        })\r\n    }\r\n    async loop(number, ID) {\r\n        for (let i=0; i < Math.ceil(number / 100); i++) {\r\n            var r = await spotifyWebApi.getPlaylistTracks(ID, {offset: i*100}).then(response => {\r\n                return response\r\n            })\r\n            this.tracks.push(r);\r\n        }\r\n        this.tracks = this.tracks.map(hundred_tracks => {\r\n            return hundred_tracks.items\r\n        })\r\n        this.tracks = [].concat.apply([], this.tracks);\r\n        console.log(this.tracks)\r\n\r\n        console.log(this.tracks.map(item => {\r\n            return  {\r\n                album_name: item.track.album.name,\r\n                album_images: item.track.album.images,\r\n                artists: item.track.artists.map((artist) => {return artist.name}),\r\n                duration: item.track.duration_ms,\r\n                track_name: item.track.name,\r\n                date: item.added_at,\r\n            }\r\n        }))\r\n    }\r\n\r\n\r\n    render () {\r\n        return(\r\n            <div className=\"playlist-button-and-image-container\">\r\n            <Button className=\"playlist-button\" onClick={() => {this.handleClick(this.props.id)}}>{this.props.name}</Button>\r\n            <img className=\"playlist-image\" src={this.props.image} alt={this.props.name}/>\r\n            <Link to= {{\r\n                pathname: \"/youtube\",\r\n                playlist: \"x\",\r\n                tracks: this.state.tracks,\r\n            }}>\r\n            </Link>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n// <Button className=\"playlist-number\">{this.props.index} </Button>\r\nexport default PlaylistButton"]},"metadata":{},"sourceType":"module"}