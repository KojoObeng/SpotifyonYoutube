{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kwadw\\\\OneDrive\\\\Documents\\\\Grind\\\\Projects\\\\React Projects\\\\Spotify\\\\spotify\\\\src\\\\pages\\\\nowPlaying.js\";\nimport React, { Component } from 'react';\nimport Spotify from \"spotify-web-api-js\";\nconst spotifyWebApi = new Spotify();\n\nclass NowPlaying extends Component {\n  constructor() {\n    super();\n    const params = this.getHashParams();\n    this.state = {\n      loggedIn: params.access_token ? true : false,\n      nowPlaying: {\n        name: \"Not Checked\",\n        image: \"k\"\n      }\n    };\n    this.getNowPlaying = this.getNowPlaying.bind(this);\n\n    if (params.access_token) {\n      spotifyWebApi.setAccessToken(params.access_token);\n    }\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n\n    while (e = r.exec(q)) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n\n    return hashParams;\n  }\n\n  getNowPlaying() {\n    spotifyWebApi.getMyCurrentPlaybackState().then(response => {\n      this.setState({\n        nowPlaying: {\n          name: response.item.name,\n          image: response.item.album.images[0].url\n        }\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"background\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, \" Now Playing: \", this.state.nowPlaying.name, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.nowPlaying.image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 23\n      }\n    }), \" \", \" \"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.getNowPlaying(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, \"Check Now Playing \"));\n  }\n\n}\n\nexport default nowPlaying; // getNowPlaying() {\n//     spotifyWebApi.getMyCurrentPlaybackState().then((response) => {\n//         this.setState({\n//             nowPlaying: {\n//             name: response.item.name,\n//             image: response.item.album.images[0].url,\n//             }\n//         })\n//     }\n// }","map":{"version":3,"sources":["C:/Users/Kwadw/OneDrive/Documents/Grind/Projects/React Projects/Spotify/spotify/src/pages/nowPlaying.js"],"names":["React","Component","Spotify","spotifyWebApi","NowPlaying","constructor","params","getHashParams","state","loggedIn","access_token","nowPlaying","name","image","getNowPlaying","bind","setAccessToken","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","getMyCurrentPlaybackState","then","response","setState","item","album","images","url","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,MAAMC,aAAa,GAAG,IAAID,OAAJ,EAAtB;;AAEA,MAAME,UAAN,SAAyBH,SAAzB,CAAmC;AAC/BI,EAAAA,WAAW,GAAG;AACV;AACA,UAAMC,MAAM,GAAG,KAAKC,aAAL,EAAf;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAEH,MAAM,CAACI,YAAP,GAAsB,IAAtB,GAA6B,KAD9B;AAETC,MAAAA,UAAU,EAAE;AACRC,QAAAA,IAAI,EAAE,aADE;AAERC,QAAAA,KAAK,EAAE;AAFC;AAFH,KAAb;AAOA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;;AACA,QAAIT,MAAM,CAACI,YAAX,EAAyB;AACrBP,MAAAA,aAAa,CAACa,cAAd,CAA6BV,MAAM,CAACI,YAApC;AACH;AACJ;;AACDH,EAAAA,aAAa,GAAG;AACZ,QAAIU,UAAU,GAAG,EAAjB;AACA,QAAIC,CAAJ;AAAA,QAAOC,CAAC,GAAG,sBAAX;AAAA,QACIC,CAAC,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,SAArB,CAA+B,CAA/B,CADR;;AAEA,WAAQN,CAAC,GAAGC,CAAC,CAACM,IAAF,CAAOL,CAAP,CAAZ,EAAwB;AACpBH,MAAAA,UAAU,CAACC,CAAC,CAAC,CAAD,CAAF,CAAV,GAAmBQ,kBAAkB,CAACR,CAAC,CAAC,CAAD,CAAF,CAArC;AACH;;AACD,WAAOD,UAAP;AACH;;AACDH,EAAAA,aAAa,GAAG;AACZX,IAAAA,aAAa,CAACwB,yBAAd,GAA0CC,IAA1C,CAAgDC,QAAD,IAAc;AACzD,WAAKC,QAAL,CAAc;AACVnB,QAAAA,UAAU,EAAE;AACRC,UAAAA,IAAI,EAAEiB,QAAQ,CAACE,IAAT,CAAcnB,IADZ;AAERC,UAAAA,KAAK,EAAEgB,QAAQ,CAACE,IAAT,CAAcC,KAAd,CAAoBC,MAApB,CAA2B,CAA3B,EAA8BC;AAF7B;AADF,OAAd;AAMH,KAPD;AAQH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAoB,KAAK3B,KAAL,CAAWG,UAAX,CAAsBC,IAA1C,MADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAM;AAAK,MAAA,GAAG,EAAE,KAAKJ,KAAL,CAAWG,UAAX,CAAsBE,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAN,EAAgD,GAAhD,MAFJ,eAGI;AAAQ,MAAA,OAAO,EAAE,KAAKC,aAAL,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAHJ,CADJ;AAOH;;AA5C8B;;AA+CnC,eAAeH,UAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\r\nimport Spotify from \"spotify-web-api-js\";\r\nconst spotifyWebApi = new Spotify();\r\n\r\nclass NowPlaying extends Component {\r\n    constructor() {\r\n        super();\r\n        const params = this.getHashParams();\r\n        this.state = {\r\n            loggedIn: params.access_token ? true : false,\r\n            nowPlaying: {\r\n                name: \"Not Checked\",\r\n                image: \"k\"\r\n            }\r\n        };\r\n        this.getNowPlaying = this.getNowPlaying.bind(this);\r\n        if (params.access_token) {\r\n            spotifyWebApi.setAccessToken(params.access_token);\r\n        }\r\n    }\r\n    getHashParams() {\r\n        var hashParams = {};\r\n        var e, r = /([^&;=]+)=?([^&;]*)/g,\r\n            q = window.location.hash.substring(1);\r\n        while ((e = r.exec(q))) {\r\n            hashParams[e[1]] = decodeURIComponent(e[2]);\r\n        }\r\n        return hashParams;\r\n    }\r\n    getNowPlaying() {\r\n        spotifyWebApi.getMyCurrentPlaybackState().then((response) => {\r\n            this.setState({\r\n                nowPlaying: {\r\n                    name: response.item.name,\r\n                    image: response.item.album.images[0].url,\r\n                }\r\n            })\r\n        })\r\n    }\r\n      \r\n    render() {\r\n        return (\r\n            <div className=\"background\">\r\n                <div> Now Playing: {this.state.nowPlaying.name} </div>\r\n                <div> <img src={this.state.nowPlaying.image} />{\" \"} </div>\r\n                <button onClick={this.getNowPlaying()}>Check Now Playing </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default nowPlaying\r\n\r\n// getNowPlaying() {\r\n//     spotifyWebApi.getMyCurrentPlaybackState().then((response) => {\r\n//         this.setState({\r\n//             nowPlaying: {\r\n//             name: response.item.name,\r\n//             image: response.item.album.images[0].url,\r\n//             }\r\n//         })\r\n//     }\r\n// }"]},"metadata":{},"sourceType":"module"}