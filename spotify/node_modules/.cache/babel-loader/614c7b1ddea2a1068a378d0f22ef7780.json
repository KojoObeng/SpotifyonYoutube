{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kwadw\\\\OneDrive\\\\Documents\\\\Grind\\\\Projects\\\\React Projects\\\\Spotify\\\\spotify\\\\src\\\\pages\\\\youtube.js\";\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\nimport \"../css/pickPlaylist.css\";\nimport Spotify from 'spotify-web-api-js';\nconst spotifyWebApi = new Spotify();\n\nclass Youtube extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loadVideo = id => {\n      this.player = new window.YT.Player('player', {\n        host: \"https://www.youtube.com\",\n        height: '640',\n        width: '1320',\n        videoId: 'M7lc1UVf-VE',\n        playerVars: {\n          controls: 1,\n          autoplay: 0,\n          disablekb: 1,\n          enablejsapi: 1,\n          origin: \"https://localhost:3000\"\n        },\n        events: {\n          'onReady': this.onPlayerReady,\n          'onStateChange': this.onPlayerStateChange\n        }\n      });\n    };\n\n    if (this.props.location.tracks) {\n      localStorage.setItem(\"tracks\", JSON.stringify(this.props.location.tracks));\n      localStorage.setItem(\"playlist\", this.props.location.playlistName);\n    } // if (this.props.history.tracks) {\n    //     localStorage.setItem(\"tracks\", this.props.history.tracks)\n    // }\n\n\n    this.state = {\n      apiKey: \"AIzaSyAUlBPBvCwXcYNNahVcmWPKphhIs4YjaWQ\",\n      playingstate: \"\",\n      search_terms: localStorage.getItem(\"tracks\") ? this.shuffleArray(JSON.parse(localStorage.getItem(\"tracks\"))).map(track => {\n        return track.artists[0] + \" \" + track.track_name;\n      }) : \"\",\n      query_IDs: []\n    };\n    spotifyWebApi.setAccessToken(localStorage.getItem(\"access_token\"));\n    const opts = {\n      height: '400',\n      width: '640',\n      origin: \"https://localhost:8000\",\n      widget_referrer: \"https://localhost:8000\",\n      playerVars: {\n        enablejsapi: 1,\n        playlist: []\n      }\n    };\n    this.search = this.search.bind(this);\n    this.loadVideo = this.loadVideo.bind(this);\n  }\n\n  componentDidMount() {\n    for (let i = 0; i < 3; i++) {\n      this.search(this.state.search_terms[i]);\n    }\n\n    spotifyWebApi.getMyCurrentPlaybackState().then(response => {\n      console.log(response);\n\n      if (response === \"\") {\n        console.log(\"nothing has been playing for the past 15 minutes\");\n      } else if (response !== \"\" & response.is_playing === false) {\n        console.log(\"nothing is currently playing right now\");\n        spotifyWebApi.play(response => {\n          console.log(\"play\");\n        });\n      } else {\n        console.log(response.is_playing);\n        console.log(response.item.name);\n        console.log(response.item.artists[0].name);\n        console.log(response.item.id);\n        spotifyWebApi.pause(response => {\n          console.log(response, \"stop\");\n        });\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n\n    if (!window.YT) {\n      const tag = document.createElement('script');\n      tag.src = 'https://www.youtube.com/iframe_api';\n      window.onYouTubeIframeAPIReady = this.loadVideo;\n      const firstScriptTag = document.getElementsByTagName('script')[0];\n      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n    } else {\n      this.loadVideo();\n    }\n  }\n\n  shuffleArray(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n\n    return array;\n  }\n\n  onPlayerStateChange(e) {\n    if (e.data === window.YT.PlayerState.PLAYING) {\n      console.log('playing');\n    }\n\n    if (e.data === window.YT.PlayerState.PAUSED) {\n      console.log(\"YouTube Video is PAUSED!!\");\n    }\n\n    if (e.data === window.YT.PlayerState.ENDED) {\n      console.log(\"YouTube Video is ENDING!!\");\n    }\n  }\n\n  onPlayerReady(e) {\n    e.target.playVideo();\n  }\n\n  async search(query) {\n    axios.get(\"https://www.googleapis.com/youtube/v3/search?key=\" + this.state.apiKey + \"&q=\" + query + \"&part=snippet&maxResults=2&type=video\").then(response => {\n      this.setState({\n        queryID: response.data.items[0].id.videoId\n      });\n      console.log(this.state.queryID);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/pickPlaylist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"spotify-youtube-back-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }\n    }, \"Back\")), /*#__PURE__*/React.createElement(Button, {\n      className: \"spotify-youtube-back-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }\n    }, \" Play \"), /*#__PURE__*/React.createElement(Button, {\n      className: \"spotify-youtube-back-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }, \"  \", this.state.search_terms[0], \" \"), /*#__PURE__*/React.createElement(Button, {\n      className: \"spotify-youtube-back-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }, \" \", this.state.search_terms[1]), /*#__PURE__*/React.createElement(Button, {\n      className: \"spotify-youtube-back-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }, \" \", this.state.search_terms[2]), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"player\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 18\n      }\n    }));\n  }\n\n}\n\nexport default Youtube; // https://github.com/tjallingt/react-youtube","map":{"version":3,"sources":["C:/Users/Kwadw/OneDrive/Documents/Grind/Projects/React Projects/Spotify/spotify/src/pages/youtube.js"],"names":["axios","React","Component","Link","Button","Spotify","spotifyWebApi","Youtube","constructor","props","loadVideo","id","player","window","YT","Player","host","height","width","videoId","playerVars","controls","autoplay","disablekb","enablejsapi","origin","events","onPlayerReady","onPlayerStateChange","location","tracks","localStorage","setItem","JSON","stringify","playlistName","state","apiKey","playingstate","search_terms","getItem","shuffleArray","parse","map","track","artists","track_name","query_IDs","setAccessToken","opts","widget_referrer","playlist","search","bind","componentDidMount","i","getMyCurrentPlaybackState","then","response","console","log","is_playing","play","item","name","pause","catch","error","tag","document","createElement","src","onYouTubeIframeAPIReady","firstScriptTag","getElementsByTagName","parentNode","insertBefore","array","length","j","Math","floor","random","e","data","PlayerState","PLAYING","PAUSED","ENDED","target","playVideo","query","get","setState","queryID","items","render"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport {Link} from \"react-router-dom\"\r\nimport { Button } from \"react-bootstrap\";\r\nimport \"../css/pickPlaylist.css\"\r\nimport Spotify from 'spotify-web-api-js'\r\n\r\nconst spotifyWebApi =  new Spotify();\r\nclass Youtube extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        if  (this.props.location.tracks) {\r\n            localStorage.setItem(\"tracks\",  JSON.stringify(this.props.location.tracks))\r\n            localStorage.setItem(\"playlist\", this.props.location.playlistName)\r\n        }\r\n        // if (this.props.history.tracks) {\r\n        //     localStorage.setItem(\"tracks\", this.props.history.tracks)\r\n        // }\r\n        this.state = {\r\n            apiKey: \"AIzaSyAUlBPBvCwXcYNNahVcmWPKphhIs4YjaWQ\",\r\n            playingstate: \"\",\r\n            search_terms: localStorage.getItem(\"tracks\") ? \r\n            this.shuffleArray(JSON.parse(localStorage.getItem(\"tracks\"))).map((track) => {\r\n                return track.artists[0] + \" \" + track.track_name;\r\n            }) : \"\",\r\n            query_IDs: [],\r\n        }\r\n        spotifyWebApi.setAccessToken(localStorage.getItem(\"access_token\"));\r\n        const opts = {\r\n            height: '400',\r\n            width: '640',\r\n            origin: \"https://localhost:8000\",\r\n            widget_referrer: \"https://localhost:8000\",\r\n            playerVars: {\r\n                enablejsapi: 1,\r\n                playlist: [],\r\n\r\n            }\r\n        }\r\n\r\n        this.search = this.search.bind(this)\r\n        this.loadVideo = this.loadVideo.bind(this)\r\n    }\r\n    componentDidMount() {\r\n        for (let i=0; i<3; i++) {\r\n            this.search(this.state.search_terms[i])\r\n        }\r\n        spotifyWebApi.getMyCurrentPlaybackState().then((response) => {\r\n            console.log(response)\r\n            if (response === \"\") {\r\n                console.log(\"nothing has been playing for the past 15 minutes\")\r\n            }\r\n            else if ((response !== \"\") & (response.is_playing===false)) {\r\n                console.log(\"nothing is currently playing right now\")\r\n                spotifyWebApi.play((response) => {\r\n                    console.log(\"play\");\r\n                })\r\n            }\r\n            else {\r\n                console.log(response.is_playing)\r\n                console.log(response.item.name)\r\n                console.log(response.item.artists[0].name)\r\n                console.log(response.item.id)\r\n                spotifyWebApi.pause((response) => {\r\n                    console.log(response, \"stop\");\r\n                })\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n        })\r\n\r\n        if (!window.YT) {\r\n            const tag = document.createElement('script');\r\n            tag.src = 'https://www.youtube.com/iframe_api'\r\n            window.onYouTubeIframeAPIReady = this.loadVideo;\r\n            const firstScriptTag = document.getElementsByTagName('script')[0];\r\n            firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n        }\r\n        else {\r\n            this.loadVideo();\r\n        }\r\n    }\r\n\r\n    loadVideo = (id) => {\r\n        this.player = new window.YT.Player('player', {\r\n            host: \"https://www.youtube.com\",\r\n            height: '640',\r\n            width: '1320',\r\n            videoId: 'M7lc1UVf-VE',\r\n            playerVars: {\r\n                controls: 1,\r\n                autoplay: 0,\r\n                disablekb: 1,\r\n                enablejsapi: 1,\r\n                origin: \"https://localhost:3000\"\r\n            },\r\n            events: {\r\n                'onReady': this.onPlayerReady,\r\n                'onStateChange': this.onPlayerStateChange,\r\n            }\r\n        });\r\n    }\r\n    shuffleArray(array) {\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n        return array\r\n    }\r\n\r\n    onPlayerStateChange(e) {\r\n        if (e.data === window.YT.PlayerState.PLAYING) {\r\n            console.log('playing')\r\n        }\r\n        if (e.data === window.YT.PlayerState.PAUSED) {\r\n            console.log(\"YouTube Video is PAUSED!!\");\r\n        }\r\n        if (e.data === window.YT.PlayerState.ENDED) {\r\n            console.log(\"YouTube Video is ENDING!!\");\r\n        }\r\n    }\r\n\r\n    onPlayerReady(e) {\r\n        e.target.playVideo();\r\n    }\r\n    async search(query) {\r\n        axios\r\n        .get(\"https://www.googleapis.com/youtube/v3/search?key=\" + this.state.apiKey + \"&q=\" + query + \"&part=snippet&maxResults=2&type=video\")\r\n        .then((response) => {\r\n            this.setState({\r\n                queryID:response.data.items[0].id.videoId\r\n            })\r\n            console.log(this.state.queryID)\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n        });\r\n    } \r\n    render() {\r\n        return(\r\n            <div>\r\n                <Link to=\"/pickPlaylist\">\r\n                    <Button className=\"spotify-youtube-back-button\">\r\n                        Back\r\n                    </Button>\r\n                </Link>\r\n                <Button className=\"spotify-youtube-back-button\"> Play </Button>\r\n                <Button className=\"spotify-youtube-back-button\">  {this.state.search_terms[0]} </Button>\r\n                <Button className=\"spotify-youtube-back-button\"> {this.state.search_terms[1]}</Button>\r\n                <Button className=\"spotify-youtube-back-button\"> {this.state.search_terms[2]}</Button>\r\n                 <div id=\"player\"></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n  \r\n\r\nexport default Youtube\r\n\r\n// https://github.com/tjallingt/react-youtube"]},"metadata":{},"sourceType":"module"}