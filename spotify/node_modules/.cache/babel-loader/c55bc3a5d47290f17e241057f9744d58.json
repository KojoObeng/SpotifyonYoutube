{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kwadw\\\\OneDrive\\\\Documents\\\\Grind\\\\Projects\\\\React Projects\\\\Spotify\\\\spotify\\\\src\\\\pages\\\\youtube.js\";\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport YouTube from 'react-youtube';\nimport { Button } from \"react-bootstrap\";\nimport \"../css/pickPlaylist.css\";\n\nconst YTPlayer = require('yt-player');\n\nclass Youtube extends Component {\n  constructor() {\n    super();\n    this.state = {\n      apiKey: \"AIzaSyAUlBPBvCwXcYNNahVcmWPKphhIs4YjaWQ\",\n      searchTerm: \"\",\n      songName: \"\",\n      playlists: []\n    };\n    const opts = {\n      height: '400',\n      width: '640',\n      playerVars: {\n        enablejsapi: 1,\n        playlist: []\n      }\n    };\n    let YT;\n    this.search = this.search.bind(this);\n  }\n\n  componentDidMount() {\n    const tag = document.createElement('script');\n    tag.src = 'https://www.youtube.com/iframe_api';\n    const firstScriptTag = document.getElementsByTagName('script')[0];\n    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n    console.log(tag.src);\n\n    window.onYouTubeIframeAPIReady = e => {\n      this.YT = window.YT;\n    };\n\n    this.player = new window.YT.Player('player', {\n      height: '390',\n      width: '640',\n      videoId: 'M7lc1UVf-VE',\n      events: {\n        'onReady': this.onPlayerReady,\n        'onStateChange': this.onPlayerStateChange\n      }\n    });\n  }\n\n  onPlayerStateChange(e) {\n    if (e.data == window.YT.PlayerState.PLAYING) {\n      console.log('playing');\n    }\n  }\n\n  onPlayerReady(event) {\n    event.target.playVideo();\n  }\n\n  createPlaylistButtons() {\n    this.setState.playlists.map(playlist => {\n      return playlist.name;\n    });\n  }\n\n  async search(query) {\n    axios.get(\"https://www.googleapis.com/youtube/v3/search?key=\" + this.state.apiKey + \"&q=\" + query + \"&part=snippet&maxResults=5&type=video\").then(response => {\n      console.log(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"script\", {\n      src: \"https://www.youtube.com/player_api\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"player\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default Youtube; // https://github.com/tjallingt/react-youtube","map":{"version":3,"sources":["C:/Users/Kwadw/OneDrive/Documents/Grind/Projects/React Projects/Spotify/spotify/src/pages/youtube.js"],"names":["axios","React","Component","YouTube","Button","YTPlayer","require","Youtube","constructor","state","apiKey","searchTerm","songName","playlists","opts","height","width","playerVars","enablejsapi","playlist","YT","search","bind","componentDidMount","tag","document","createElement","src","firstScriptTag","getElementsByTagName","parentNode","insertBefore","console","log","window","onYouTubeIframeAPIReady","e","player","Player","videoId","events","onPlayerReady","onPlayerStateChange","data","PlayerState","PLAYING","event","target","playVideo","createPlaylistButtons","setState","map","name","query","get","then","response","catch","error","render"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport YouTube from 'react-youtube';\r\nimport {\r\n    Button\r\n  } from \"react-bootstrap\";\r\nimport \"../css/pickPlaylist.css\"\r\n\r\nconst YTPlayer = require('yt-player')\r\n\r\nclass Youtube extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            apiKey: \"AIzaSyAUlBPBvCwXcYNNahVcmWPKphhIs4YjaWQ\",\r\n            searchTerm: \"\",\r\n            songName: \"\",\r\n            playlists: [],\r\n        }\r\n        const opts = {\r\n            height: '400',\r\n            width: '640',\r\n            playerVars: {\r\n                enablejsapi: 1,\r\n                playlist: [],\r\n            }\r\n        }\r\n        let YT\r\n        this.search = this.search.bind(this)\r\n    }\r\n    componentDidMount() {\r\n        const tag = document.createElement('script');\r\n        tag.src = 'https://www.youtube.com/iframe_api';\r\n        const firstScriptTag = document.getElementsByTagName('script')[0];\r\n        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n        console.log(tag.src)\r\n        window.onYouTubeIframeAPIReady = (e) => {\r\n            this.YT = window.YT;\r\n        }\r\n        this.player = new window.YT.Player('player', {\r\n            height: '390',\r\n            width: '640',\r\n            videoId: 'M7lc1UVf-VE',\r\n            events: {\r\n                'onReady': this.onPlayerReady,\r\n                'onStateChange': this.onPlayerStateChange\r\n            }\r\n        });\r\n    }\r\n    onPlayerStateChange(e) {\r\n        if (e.data == window.YT.PlayerState.PLAYING) {\r\n            console.log('playing')\r\n        }\r\n    }\r\n\r\n    onPlayerReady(event) {\r\n        event.target.playVideo();\r\n    }\r\n    \r\n    createPlaylistButtons() {\r\n        this.setState.playlists.map(playlist => {return playlist.name});\r\n    }\r\n\r\n    async search(query) {\r\n        axios\r\n        .get(\"https://www.googleapis.com/youtube/v3/search?key=\" + this.state.apiKey + \"&q=\" + query + \"&part=snippet&maxResults=5&type=video\")\r\n        .then((response) => {\r\n            console.log(response)\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n        });\r\n    }  \r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <div>\r\n                    <script src=\"https://www.youtube.com/player_api\"></script>\r\n                </div>\r\n                <div id=\"player\">\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n  \r\n\r\nexport default Youtube\r\n\r\n// https://github.com/tjallingt/react-youtube"]},"metadata":{},"sourceType":"module"}