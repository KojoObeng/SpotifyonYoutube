{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kwadw\\\\OneDrive\\\\Documents\\\\Grind\\\\Projects\\\\React Projects\\\\Spotify\\\\spotify\\\\src\\\\components\\\\PlaylistButton.js\";\nimport React, { Component, useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Spotify from \"spotify-web-api-js\";\nimport { useHistory, withRouter } from 'react-router-dom';\nimport { Button } from \"react-bootstrap\";\nimport \"../css/pickPlaylist.css\";\nconst spotifyWebApi = new Spotify();\n\nclass PlaylistButton extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current_playlist: \"\",\n      numOfTracks: 0,\n      tracks: []\n    };\n    this.handleClick.bind(this);\n    this.loop.bind(this);\n  }\n\n  handleClick(playlistID) {\n    this.setState({\n      current_playlist: playlistID\n    });\n    this.tracklist = [];\n    this.numOfTracks = 0;\n    spotifyWebApi.getPlaylistTracks(playlistID).then(response => {\n      this.numOfTracks = response.total;\n      this.loop(this.numOfTracks, playlistID);\n    });\n  }\n\n  async loop(number, ID) {\n    for (let i = 0; i < Math.ceil(number / 100); i++) {\n      var r = await spotifyWebApi.getPlaylistTracks(ID, {\n        offset: i * 100\n      }).then(response => {\n        return response;\n      });\n      this.tracks.push(r);\n    }\n\n    this.tracks = this.tracks.map(hundred_tracks => {\n      return hundred_tracks.items;\n    });\n    this.tracks = [].concat.apply([], this.tracks);\n    this.setState({\n      tracks: this.tracks.map(item => {\n        return {\n          album_name: item.track.album.name,\n          album_images: item.track.album.images,\n          artists: item.track.artists.map(artist => {\n            return artist.name;\n          }),\n          duration: item.track.duration_ms,\n          track_name: item.track.name,\n          date: item.added_at\n        };\n      })\n    });\n    console.log(this.props);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"playlist-button-and-image-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"playlist-button\",\n      onClick: () => {\n        this.handleClick(this.props.id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, this.props.name), /*#__PURE__*/React.createElement(\"img\", {\n      className: \"playlist-image\",\n      src: this.props.image,\n      alt: this.props.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: \"/youtube\",\n        playlist: this.state.current_playlist,\n        tracks: this.state.tracks\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }));\n  }\n\n} // <Button className=\"playlist-number\">{this.props.index} </Button>\n\n\nexport default PlaylistButton;","map":{"version":3,"sources":["C:/Users/Kwadw/OneDrive/Documents/Grind/Projects/React Projects/Spotify/spotify/src/components/PlaylistButton.js"],"names":["React","Component","useCallback","Link","Spotify","useHistory","withRouter","Button","spotifyWebApi","PlaylistButton","constructor","props","state","current_playlist","numOfTracks","tracks","handleClick","bind","loop","playlistID","setState","tracklist","getPlaylistTracks","then","response","total","number","ID","i","Math","ceil","r","offset","push","map","hundred_tracks","items","concat","apply","item","album_name","track","album","name","album_images","images","artists","artist","duration","duration_ms","track_name","date","added_at","console","log","render","id","image","pathname","playlist"],"mappings":"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","sourcesContent":["import React, { Component, useCallback} from \"react\";\r\nimport {Link} from \"react-router-dom\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Spotify from \"spotify-web-api-js\";\r\nimport {useHistory, withRouter} from 'react-router-dom';\r\nimport {\r\n    Button\r\n  } from \"react-bootstrap\";\r\nimport \"../css/pickPlaylist.css\"\r\n\r\nconst spotifyWebApi = new Spotify();\r\n\r\nclass PlaylistButton extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            current_playlist: \"\",\r\n            numOfTracks: 0,\r\n            tracks: [],\r\n        }\r\n        this.handleClick.bind(this);\r\n        this.loop.bind(this);\r\n    }\r\n    handleClick(playlistID) {\r\n        this.setState({\r\n            current_playlist: playlistID\r\n        })\r\n        this.tracklist = [];\r\n        this.numOfTracks = 0\r\n        spotifyWebApi.getPlaylistTracks(playlistID).then((response) => {\r\n            this.numOfTracks = response.total\r\n            this.loop(this.numOfTracks, playlistID)\r\n        })\r\n    }\r\n    async loop(number, ID) {\r\n        for (let i=0; i < Math.ceil(number / 100); i++) {\r\n            var r = await spotifyWebApi.getPlaylistTracks(ID, {offset: i*100}).then(response => {\r\n                return response\r\n            })\r\n            this.tracks.push(r);\r\n        }\r\n        this.tracks = this.tracks.map(hundred_tracks => {\r\n            return hundred_tracks.items\r\n        })\r\n        this.tracks = [].concat.apply([], this.tracks);\r\n        this.setState({ \r\n            tracks: this.tracks.map(item => {\r\n                return  {\r\n                    album_name: item.track.album.name,\r\n                    album_images: item.track.album.images,\r\n                    artists: item.track.artists.map((artist) => {return artist.name}),\r\n                    duration: item.track.duration_ms,\r\n                    track_name: item.track.name,\r\n                    date: item.added_at,\r\n                }\r\n            })\r\n        })\r\n\r\n        console.log(this.props)\r\n    }\r\n\r\n\r\n    render () {\r\n        return(\r\n            <div className=\"playlist-button-and-image-container\">\r\n                <Button className=\"playlist-button\" onClick={() => {this.handleClick(this.props.id)}}>{this.props.name}</Button>\r\n                <img className=\"playlist-image\" src={this.props.image} alt={this.props.name}/>\r\n            <Link to= {{\r\n                pathname: \"/youtube\",\r\n                playlist: this.state.current_playlist,\r\n                tracks: this.state.tracks,\r\n            }}>\r\n            </Link>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n// <Button className=\"playlist-number\">{this.props.index} </Button>\r\nexport default PlaylistButton"]},"metadata":{},"sourceType":"module"}