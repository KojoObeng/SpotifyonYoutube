{"ast":null,"code":"import axios from 'axios';\nimport React, { Component } from 'react';\nimport Spotify from \"spotify-web-api-js\";\n\nclass PickPlaylist extends Component {\n  constructor() {\n    super();\n    this.state = {\n      playlists: []\n    };\n    this.getPlaylists = this.getPlaylists.bind(this);\n  }\n\n  componentDidMount() {\n    this.getPlaylists();\n  }\n\n  getPlaylists() {\n    spotifyWebApi.getUserPlaylists().then(response => {\n      this.setState({\n        playlists: response.items\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n}\n\nexport default PickPlaylist;","map":{"version":3,"sources":["C:/Users/Kwadw/OneDrive/Documents/Grind/Projects/React Projects/Spotify/spotify/src/pages/pickPlaylist.js"],"names":["axios","React","Component","Spotify","PickPlaylist","constructor","state","playlists","getPlaylists","bind","componentDidMount","spotifyWebApi","getUserPlaylists","then","response","setState","items","catch","error","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA,MAAMC,YAAN,SAA2BF,SAA3B,CAAqC;AACjCG,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE;AADF,KAAb;AAGA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AAEH;;AACDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKF,YAAL;AACH;;AACDA,EAAAA,YAAY,GAAI;AACZG,IAAAA,aAAa,CAACC,gBAAd,GACCC,IADD,CACOC,QAAD,IAAc;AAChB,WAAKC,QAAL,CAAc;AAACR,QAAAA,SAAS,EAAEO,QAAQ,CAACE;AAArB,OAAd;AAA2C,KAF/C,EAGCC,KAHD,CAGQC,KAAD,IAAW;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KALD;AAMH;;AAnBgC;;AAsBrC,eAAed,YAAf","sourcesContent":["import axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport Spotify from \"spotify-web-api-js\";\r\n\r\nclass PickPlaylist extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            playlists: [],\r\n        }\r\n        this.getPlaylists = this.getPlaylists.bind(this)\r\n        \r\n    }\r\n    componentDidMount() {\r\n        this.getPlaylists()\r\n    }\r\n    getPlaylists () {\r\n        spotifyWebApi.getUserPlaylists()\r\n        .then((response) => {\r\n            this.setState({playlists: response.items})})\r\n        .catch((error) => {\r\n            console.log(error)\r\n        });\r\n    }\r\n}\r\n\r\nexport default PickPlaylist"]},"metadata":{},"sourceType":"module"}