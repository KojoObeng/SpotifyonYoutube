{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kwadw\\\\OneDrive\\\\Documents\\\\Grind\\\\Projects\\\\React Projects\\\\Spotify\\\\spotify\\\\src\\\\components\\\\PlaylistButton.js\";\nimport React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../css/Playlists.css\";\nimport Spotify from \"spotify-web-api-js\";\nimport { Button } from \"react-bootstrap\";\nconst spotifyWebApi = new Spotify();\n\nclass PlaylistButton extends Component {\n  constructor(props) {\n    super(props);\n    this.handleClick.bind(this);\n  }\n\n  handleClick(playlistID) {\n    var tracks = [];\n    const numOftracks = spotifyWebApi.getPlaylistTracks(playlistID).then(response => {\n      return response.total;\n    });\n\n    if (numOftracks > 100) {\n      var i;\n\n      for (i = 0; i < Math.ceil(numOftracks % 100); i++) {\n        spotifyWebApi.getPlaylistTracks(playlistID, {\n          offset: i * 100\n        }).then(response => {\n          tracks.push(response.items.track);\n          console.log(tracks);\n        });\n      }\n    }\n\n    const options = {\n      offset: 100\n    }; // spotifyWebApi.getPlaylistTracks(playlistID, options).then((response) => {\n    //     console.log(response)\n    //     console.log(response.items[0].track.artists[0].name) // artist name\n    //     console.log(response.items[0].track.name) // song title\n    //     console.log(response.items[0].track.album.images[0].url) \n    //     console.log(response.items[0].images[0].url) // playlist images in a url\n    // });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => {\n        this.handleClick(this.props.id);\n      },\n      className: \"playlist_button\",\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, this.props.name));\n  }\n\n}\n\nexport default PlaylistButton;","map":{"version":3,"sources":["C:/Users/Kwadw/OneDrive/Documents/Grind/Projects/React Projects/Spotify/spotify/src/components/PlaylistButton.js"],"names":["React","Component","Spotify","Button","spotifyWebApi","PlaylistButton","constructor","props","handleClick","bind","playlistID","tracks","numOftracks","getPlaylistTracks","then","response","total","i","Math","ceil","offset","push","items","track","console","log","options","render","id","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,sCAAP;AACA,OAAO,sBAAP;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SACIC,MADJ,QAES,iBAFT;AAIA,MAAMC,aAAa,GAAG,IAAIF,OAAJ,EAAtB;;AAEA,MAAMG,cAAN,SAA6BJ,SAA7B,CAAuC;AACnCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB;AACH;;AACDD,EAAAA,WAAW,CAACE,UAAD,EAAa;AACpB,QAAIC,MAAM,GAAG,EAAb;AACA,UAAMC,WAAW,GAAGR,aAAa,CAACS,iBAAd,CAAgCH,UAAhC,EAA4CI,IAA5C,CAAkDC,QAAD,IAAc;AAC/E,aAAOA,QAAQ,CAACC,KAAhB;AAAsB,KADN,CAApB;;AAIA,QAAIJ,WAAW,GAAG,GAAlB,EAAuB;AACnB,UAAIK,CAAJ;;AACA,WAAKA,CAAC,GAAC,CAAP,EAAUA,CAAC,GAAGC,IAAI,CAACC,IAAL,CAAUP,WAAW,GAAG,GAAxB,CAAd,EAA4CK,CAAC,EAA7C,EAAiD;AAC7Cb,QAAAA,aAAa,CAACS,iBAAd,CAAgCH,UAAhC,EAA4C;AAACU,UAAAA,MAAM,EAAEH,CAAC,GAAC;AAAX,SAA5C,EAA6DH,IAA7D,CAAmEC,QAAD,IAAc;AAC5EJ,UAAAA,MAAM,CAACU,IAAP,CAAYN,QAAQ,CAACO,KAAT,CAAeC,KAA3B;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYd,MAAZ;AACH,SAHD;AAIH;AAEJ;;AAGD,UAAMe,OAAO,GAAG;AACZN,MAAAA,MAAM,EAAE;AADI,KAAhB,CAlBoB,CAqBpB;AACA;AACA;AACA;AACA;AAEA;AACA;AACH;;AACDO,EAAAA,MAAM,GAAI;AACN,wBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAC,aAAKnB,WAAL,CAAiB,KAAKD,KAAL,CAAWqB,EAA5B;AAAgC,OAAxD;AAA0D,MAAA,SAAS,EAAC,iBAApE;AAAsF,MAAA,IAAI,EAAC,IAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiG,KAAKrB,KAAL,CAAWsB,IAA5G,CADJ,CADA;AAKH;;AAzCkC;;AA4CvC,eAAexB,cAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../css/Playlists.css\";\r\nimport Spotify from \"spotify-web-api-js\";\r\nimport {\r\n    Button\r\n  } from \"react-bootstrap\";\r\n\r\nconst spotifyWebApi = new Spotify();\r\n\r\nclass PlaylistButton extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleClick.bind(this);\r\n    }\r\n    handleClick(playlistID) {\r\n        var tracks = []\r\n        const numOftracks = spotifyWebApi.getPlaylistTracks(playlistID).then((response) => {\r\n            return response.total})\r\n        \r\n\r\n        if (numOftracks > 100) {\r\n            var i;\r\n            for (i=0; i < Math.ceil(numOftracks % 100); i++) {\r\n                spotifyWebApi.getPlaylistTracks(playlistID, {offset: i*100}).then((response) => {\r\n                    tracks.push(response.items.track)\r\n                    console.log(tracks)\r\n                });\r\n            }\r\n            \r\n        }\r\n        \r\n    \r\n        const options = {\r\n            offset: 100,\r\n        }\r\n        // spotifyWebApi.getPlaylistTracks(playlistID, options).then((response) => {\r\n        //     console.log(response)\r\n        //     console.log(response.items[0].track.artists[0].name) // artist name\r\n        //     console.log(response.items[0].track.name) // song title\r\n        //     console.log(response.items[0].track.album.images[0].url) \r\n\r\n        //     console.log(response.items[0].images[0].url) // playlist images in a url\r\n        // });\r\n    }\r\n    render () {\r\n        return(\r\n        <div>\r\n            <Button onClick={() => {this.handleClick(this.props.id)}} className=\"playlist_button\" size=\"lg\">{this.props.name}</Button>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PlaylistButton"]},"metadata":{},"sourceType":"module"}