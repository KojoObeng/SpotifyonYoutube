{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kwadw\\\\OneDrive\\\\Documents\\\\Grind\\\\Projects\\\\React Projects\\\\Spotify\\\\spotify\\\\src\\\\components\\\\PlaylistButton.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Spotify from \"spotify-web-api-js\";\nimport { Button } from \"react-bootstrap\";\nimport \"../css/pickPlaylist.css\";\nconst spotifyWebApi = new Spotify();\n\nclass PlaylistButton extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tracks: [],\n      numOfTracks: 0\n    };\n    this.handleClick.bind(this);\n  }\n\n  handleClick(playlistID) {\n    const tracklist = [];\n    this.tracks = [];\n    this.numOfTracks = 0;\n    spotifyWebApi.getPlaylistTracks(playlistID).then(response => {\n      this.numOfTracks = response.total;\n\n      for (let i = 0; i < Math.ceil(this.numOfTracks / 100); i++) {\n        this.tracks.push(i);\n      }\n\n      this.tracks.forEach(number => {\n        this.tracks[number] = spotifyWebApi.getPlaylistTracks(playlistID, {\n          offset: number * 100\n        });\n      });\n    });\n    var promises = Promise.all(this.tracks);\n    promises.then(response => {\n      console.log(response);\n    });\n  } // this.setState({tracks: [this.state.tracks, ...response.items.map((item) => {\n  //     return  {\n  //         album_name: item.track.album.name,\n  //         album_images: item.track.album.images,\n  //         artists: item.track.artists.map((artist) => {return artist.name}),\n  //         duration: item.track.duration_ms,\n  //         track_name: item.track.name,\n  //         date: item.added_at,\n  //\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"playlist-button-and-image-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"playlist-button\",\n      onClick: () => {\n        this.handleClick(this.props.id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, this.props.name), /*#__PURE__*/React.createElement(\"img\", {\n      className: \"playlist-image\",\n      src: this.props.image,\n      alt: this.props.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: \"/youtube\",\n        playlist: \"x\",\n        tracks: this.state.tracks\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }));\n  }\n\n} // <Button className=\"playlist-number\">{this.props.index} </Button>\n\n\nexport default PlaylistButton;","map":{"version":3,"sources":["C:/Users/Kwadw/OneDrive/Documents/Grind/Projects/React Projects/Spotify/spotify/src/components/PlaylistButton.js"],"names":["React","Component","Link","Spotify","Button","spotifyWebApi","PlaylistButton","constructor","props","state","tracks","numOfTracks","handleClick","bind","playlistID","tracklist","getPlaylistTracks","then","response","total","i","Math","ceil","push","forEach","number","offset","promises","Promise","all","console","log","render","id","name","image","pathname","playlist"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAO,sCAAP;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SACIC,MADJ,QAES,iBAFT;AAGA,OAAO,yBAAP;AAEA,MAAMC,aAAa,GAAG,IAAIF,OAAJ,EAAtB;;AAEA,MAAMG,cAAN,SAA6BL,SAA7B,CAAuC;AACnCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,EADC;AAETC,MAAAA,WAAW,EAAE;AAFJ,KAAb;AAIA,SAAKC,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB;AACH;;AACDD,EAAAA,WAAW,CAACE,UAAD,EAAa;AACpB,UAAMC,SAAS,GAAG,EAAlB;AACA,SAAKL,MAAL,GAAc,EAAd;AACA,SAAKC,WAAL,GAAmB,CAAnB;AACAN,IAAAA,aAAa,CAACW,iBAAd,CAAgCF,UAAhC,EAA4CG,IAA5C,CAAkDC,QAAD,IAAc;AAC3D,WAAKP,WAAL,GAAmBO,QAAQ,CAACC,KAA5B;;AACA,WAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAGC,IAAI,CAACC,IAAL,CAAU,KAAKX,WAAL,GAAmB,GAA7B,CAAlB,EAAqDS,CAAC,EAAtD,EAA0D;AACtD,aAAKV,MAAL,CAAYa,IAAZ,CAAiBH,CAAjB;AACH;;AACD,WAAKV,MAAL,CAAYc,OAAZ,CAAqBC,MAAD,IAAY;AAC5B,aAAKf,MAAL,CAAYe,MAAZ,IAAsBpB,aAAa,CAACW,iBAAd,CAAgCF,UAAhC,EAA4C;AAACY,UAAAA,MAAM,EAAED,MAAM,GAAC;AAAhB,SAA5C,CAAtB;AACH,OAFD;AAGH,KARD;AASA,QAAIE,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAY,KAAKnB,MAAjB,CAAf;AACAiB,IAAAA,QAAQ,CAACV,IAAT,CAAeC,QAAD,IAAc;AACxBY,MAAAA,OAAO,CAACC,GAAR,CAAYb,QAAZ;AACH,KAFD;AAGH,GA1BkC,CA4BvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEZc,EAAAA,MAAM,GAAI;AACN,wBACI;AAAK,MAAA,SAAS,EAAC,qCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAE,MAAM;AAAC,aAAKpB,WAAL,CAAiB,KAAKJ,KAAL,CAAWyB,EAA5B;AAAgC,OAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuF,KAAKzB,KAAL,CAAW0B,IAAlG,CADA,eAEA;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAgC,MAAA,GAAG,EAAE,KAAK1B,KAAL,CAAW2B,KAAhD;AAAuD,MAAA,GAAG,EAAE,KAAK3B,KAAL,CAAW0B,IAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,eAGA,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAG;AACPE,QAAAA,QAAQ,EAAE,UADH;AAEPC,QAAAA,QAAQ,EAAE,GAFH;AAGP3B,QAAAA,MAAM,EAAE,KAAKD,KAAL,CAAWC;AAHZ,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,CADJ;AAYH;;AAnDkC,C,CAsDvC;;;AACA,eAAeJ,cAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport {Link} from \"react-router-dom\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Spotify from \"spotify-web-api-js\";\r\nimport {\r\n    Button\r\n  } from \"react-bootstrap\";\r\nimport \"../css/pickPlaylist.css\"\r\n\r\nconst spotifyWebApi = new Spotify();\r\n\r\nclass PlaylistButton extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tracks: [],\r\n            numOfTracks: 0,\r\n        }\r\n        this.handleClick.bind(this);\r\n    }\r\n    handleClick(playlistID) {\r\n        const tracklist = [];\r\n        this.tracks = [];\r\n        this.numOfTracks = 0\r\n        spotifyWebApi.getPlaylistTracks(playlistID).then((response) => {\r\n            this.numOfTracks = response.total\r\n            for (let i=0; i < Math.ceil(this.numOfTracks / 100); i++) {\r\n                this.tracks.push(i);\r\n            }\r\n            this.tracks.forEach((number) => {\r\n                this.tracks[number] = spotifyWebApi.getPlaylistTracks(playlistID, {offset: number*100})\r\n            })\r\n        })\r\n        var promises = Promise.all(this.tracks);\r\n        promises.then((response) => {\r\n            console.log(response);\r\n        })\r\n    }\r\n    \r\n                // this.setState({tracks: [this.state.tracks, ...response.items.map((item) => {\r\n                //     return  {\r\n                //         album_name: item.track.album.name,\r\n                //         album_images: item.track.album.images,\r\n                //         artists: item.track.artists.map((artist) => {return artist.name}),\r\n                //         duration: item.track.duration_ms,\r\n                //         track_name: item.track.name,\r\n                //         date: item.added_at,\r\n                //\r\n\r\n    render () {\r\n        return(\r\n            <div className=\"playlist-button-and-image-container\">\r\n            <Button className=\"playlist-button\" onClick={() => {this.handleClick(this.props.id)}}>{this.props.name}</Button>\r\n            <img className=\"playlist-image\" src={this.props.image} alt={this.props.name}/>\r\n            <Link to= {{\r\n                pathname: \"/youtube\",\r\n                playlist: \"x\",\r\n                tracks: this.state.tracks,\r\n            }}>\r\n            </Link>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n// <Button className=\"playlist-number\">{this.props.index} </Button>\r\nexport default PlaylistButton"]},"metadata":{},"sourceType":"module"}