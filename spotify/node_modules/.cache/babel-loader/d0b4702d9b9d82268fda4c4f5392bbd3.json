{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kwadw\\\\OneDrive\\\\Documents\\\\Grind\\\\Projects\\\\React Projects\\\\Spotify\\\\spotify\\\\src\\\\components\\\\PlaylistButton.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Spotify from \"spotify-web-api-js\";\nimport { Button } from \"react-bootstrap\";\nimport \"../css/pickPlaylist.css\";\nconst spotifyWebApi = new Spotify();\n\nclass PlaylistButton extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tracks: []\n    };\n    this.handleClick.bind(this);\n  }\n\n  handleClick(playlistID) {\n    const loopThroughTracks = [];\n    var numOfTracks = 0;\n    spotifyWebApi.getPlaylistTracks(playlistID).then(response => {\n      this.numOfTracks = response.total;\n    });\n\n    for (let i = 0; i < Math.ceil(numOfTracks / 100); i++) {\n      loopThroughTracks.push(spotifyWebApi.getPlaylistTracks(playlistID, {\n        offset: i * 100\n      }));\n    }\n\n    Promise.all(loopThroughTracks).then(response => {\n      console.log(response); // this.setState({tracks: [this.state.tracks, ...response.items.map((item) => {\n      //     return  {\n      //         album_name: item.track.album.name,\n      //         album_images: item.track.album.images,\n      //         artists: item.track.artists.map((artist) => {return artist.name}),\n      //         duration: item.track.duration_ms,\n      //         track_name: item.track.name,\n      //         date: item.added_at,\n      //     }\n      // })]});\n    });\n    console.log(this.state.tracks);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"playlist-button-and-image-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"playlist-button\",\n      onClick: () => {\n        this.handleClick(this.props.id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, this.props.name), /*#__PURE__*/React.createElement(\"img\", {\n      className: \"playlist-image\",\n      src: this.props.image,\n      alt: this.props.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: \"/youtube\",\n        playlist: \"x\",\n        tracks: this.state.tracks\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }));\n  }\n\n} // <Button className=\"playlist-number\">{this.props.index} </Button>\n\n\nexport default PlaylistButton;","map":{"version":3,"sources":["C:/Users/Kwadw/OneDrive/Documents/Grind/Projects/React Projects/Spotify/spotify/src/components/PlaylistButton.js"],"names":["React","Component","Link","Spotify","Button","spotifyWebApi","PlaylistButton","constructor","props","state","tracks","handleClick","bind","playlistID","loopThroughTracks","numOfTracks","getPlaylistTracks","then","response","total","i","Math","ceil","push","offset","Promise","all","console","log","render","id","name","image","pathname","playlist"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAO,sCAAP;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SACIC,MADJ,QAES,iBAFT;AAGA,OAAO,yBAAP;AAEA,MAAMC,aAAa,GAAG,IAAIF,OAAJ,EAAtB;;AAEA,MAAMG,cAAN,SAA6BL,SAA7B,CAAuC;AACnCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE;AADC,KAAb;AAGA,SAAKC,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB;AACH;;AACDD,EAAAA,WAAW,CAACE,UAAD,EAAa;AACpB,UAAMC,iBAAiB,GAAG,EAA1B;AACA,QAAIC,WAAW,GAAG,CAAlB;AACAV,IAAAA,aAAa,CAACW,iBAAd,CAAgCH,UAAhC,EAA4CI,IAA5C,CAAkDC,QAAD,IAAc;AAC3D,WAAKH,WAAL,GAAoBG,QAAQ,CAACC,KAA7B;AACH,KAFD;;AAGA,SAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAGC,IAAI,CAACC,IAAL,CAAUP,WAAW,GAAG,GAAxB,CAAlB,EAAgDK,CAAC,EAAjD,EAAqD;AACjDN,MAAAA,iBAAiB,CAACS,IAAlB,CAAuBlB,aAAa,CAACW,iBAAd,CAAgCH,UAAhC,EAA4C;AAACW,QAAAA,MAAM,EAAEJ,CAAC,GAAC;AAAX,OAA5C,CAAvB;AACH;;AAEDK,IAAAA,OAAO,CAACC,GAAR,CAAYZ,iBAAZ,EAA+BG,IAA/B,CAAqCC,QAAD,IAAc;AAC9CS,MAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ,EAD8C,CAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACP,KAZD;AAaAS,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKnB,KAAL,CAAWC,MAAvB;AACH;;AACDmB,EAAAA,MAAM,GAAI;AACN,wBACI;AAAK,MAAA,SAAS,EAAC,qCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAE,MAAM;AAAC,aAAKlB,WAAL,CAAiB,KAAKH,KAAL,CAAWsB,EAA5B;AAAgC,OAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuF,KAAKtB,KAAL,CAAWuB,IAAlG,CADA,eAEA;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAgC,MAAA,GAAG,EAAE,KAAKvB,KAAL,CAAWwB,KAAhD;AAAuD,MAAA,GAAG,EAAE,KAAKxB,KAAL,CAAWuB,IAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,eAGA,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAG;AACPE,QAAAA,QAAQ,EAAE,UADH;AAEPC,QAAAA,QAAQ,EAAE,GAFH;AAGPxB,QAAAA,MAAM,EAAE,KAAKD,KAAL,CAAWC;AAHZ,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,CADJ;AAYH;;AA9CkC,C,CAiDvC;;;AACA,eAAeJ,cAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport {Link} from \"react-router-dom\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Spotify from \"spotify-web-api-js\";\r\nimport {\r\n    Button\r\n  } from \"react-bootstrap\";\r\nimport \"../css/pickPlaylist.css\"\r\n\r\nconst spotifyWebApi = new Spotify();\r\n\r\nclass PlaylistButton extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tracks: [],\r\n        }\r\n        this.handleClick.bind(this);\r\n    }\r\n    handleClick(playlistID) {\r\n        const loopThroughTracks = [];\r\n        var numOfTracks = 0\r\n        spotifyWebApi.getPlaylistTracks(playlistID).then((response) => {\r\n            this.numOfTracks =  response.total;\r\n        })\r\n        for (let i=0; i < Math.ceil(numOfTracks / 100); i++) {\r\n            loopThroughTracks.push(spotifyWebApi.getPlaylistTracks(playlistID, {offset: i*100}))\r\n        }\r\n\r\n        Promise.all(loopThroughTracks).then((response) => {\r\n            console.log(response)\r\n                // this.setState({tracks: [this.state.tracks, ...response.items.map((item) => {\r\n                //     return  {\r\n                //         album_name: item.track.album.name,\r\n                //         album_images: item.track.album.images,\r\n                //         artists: item.track.artists.map((artist) => {return artist.name}),\r\n                //         duration: item.track.duration_ms,\r\n                //         track_name: item.track.name,\r\n                //         date: item.added_at,\r\n                //     }\r\n                // })]});\r\n        })\r\n        console.log(this.state.tracks)\r\n    }\r\n    render () {\r\n        return(\r\n            <div className=\"playlist-button-and-image-container\">\r\n            <Button className=\"playlist-button\" onClick={() => {this.handleClick(this.props.id)}}>{this.props.name}</Button>\r\n            <img className=\"playlist-image\" src={this.props.image} alt={this.props.name}/>\r\n            <Link to= {{\r\n                pathname: \"/youtube\",\r\n                playlist: \"x\",\r\n                tracks: this.state.tracks,\r\n            }}>\r\n            </Link>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n// <Button className=\"playlist-number\">{this.props.index} </Button>\r\nexport default PlaylistButton"]},"metadata":{},"sourceType":"module"}