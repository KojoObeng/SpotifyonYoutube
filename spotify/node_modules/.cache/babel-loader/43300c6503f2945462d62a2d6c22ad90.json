{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kwadw\\\\OneDrive\\\\Documents\\\\Grind\\\\Projects\\\\React Projects\\\\Spotify\\\\spotify\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport Spotify from \"spotify-web-api-js\";\nimport \"./css/App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Button, Card } from \"react-bootstrap\";\nimport { BrowserRouter as Router, Route, Switch, Link, Redirect, BrowserRouter } from \"react-router-dom\";\nimport MainPage from \"./pages\";\nconst spotifyWebApi = new Spotify();\nconst SpotifyRouter = new Router(\"Router\", [{\n  path: \"/login\",\n  name: \"login\"\n}]);\nconst routes = /*#__PURE__*/React.createElement(BrowserRouter, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }\n})); // <Link to=\"/about\">About</Link>\n// <Route path=\"/about\" component={about}\n// <Route path=\"/login\" component={Login}\n\nclass App extends Component {\n  constructor() {\n    super();\n    const params = this.getHashParams();\n    this.state = {\n      loggedIn: params.access_token ? true : false,\n      nowPlaying: {\n        name: \"Not Checked\",\n        image: \"k\"\n      }\n    };\n\n    if (params.access_token) {\n      spotifyWebApi.setAccessToken(params.access_token);\n    }\n\n    this.getNowPlaying = this.getNowPlaying.bind(this);\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n\n    while (e = r.exec(q)) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n\n    return hashParams;\n  }\n\n  getNowPlaying() {\n    spotifyWebApi.getMyCurrentPlaybackState().then(response => {\n      this.setState({\n        nowPlaying: {\n          name: response.item.name,\n          image: response.item.album.images[0].url\n        }\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"background\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      component: MainPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/youtube\",\n      component: Youtube,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      to: \"/pages/index\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      id: \"App-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card.Img, {\n      src: require(\"./images/spotify-youtube.jpg\"),\n      alt: \"Spotify-Youtube\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"http://localhost:8888/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      id: \"primary-button\",\n      class: \"primary-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }\n    }, \"Login With Spotify\")))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, \" Now Playing: \", this.state.nowPlaying.name, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.nowPlaying.image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.getNowPlaying(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, \"Check Now Playing\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Kwadw/OneDrive/Documents/Grind/Projects/React Projects/Spotify/spotify/src/App.js"],"names":["React","Component","Spotify","Button","Card","BrowserRouter","Router","Route","Switch","Link","Redirect","MainPage","spotifyWebApi","SpotifyRouter","path","name","routes","App","constructor","params","getHashParams","state","loggedIn","access_token","nowPlaying","image","setAccessToken","getNowPlaying","bind","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","getMyCurrentPlaybackState","then","response","setState","item","album","images","url","render","Youtube","require"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Spotify from \"spotify-web-api-js\";\nimport \"./css/App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {\n  Button,\n  Card\n} from \"react-bootstrap\";\n\nimport { BrowserRouter as Router, Route, Switch, Link, Redirect, BrowserRouter} from \"react-router-dom\";\nimport MainPage from \"./pages\"\n\nconst spotifyWebApi = new Spotify();\n\nconst SpotifyRouter = new Router(\"Router\", [\n  {\n    path: \"/login\",\n    name: \"login\",\n  },\n]);\n\nconst routes = (\n  <BrowserRouter>\n    <div></div>\n  </BrowserRouter>\n)\n\n// <Link to=\"/about\">About</Link>\n// <Route path=\"/about\" component={about}\n// <Route path=\"/login\" component={Login}\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    const params = this.getHashParams();\n    this.state = {\n      loggedIn: params.access_token ? true : false,\n      nowPlaying: {\n        name: \"Not Checked\",\n        image: \"k\",\n      },\n    };\n\n    if (params.access_token) {\n      spotifyWebApi.setAccessToken(params.access_token);\n\n    }\n\n    this.getNowPlaying = this.getNowPlaying.bind(this);\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n      r = /([^&;=]+)=?([^&;]*)/g,\n      q = window.location.hash.substring(1);\n    while ((e = r.exec(q))) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n    return hashParams;\n  }\n\n  getNowPlaying() {\n    spotifyWebApi.getMyCurrentPlaybackState()\n    .then((response) => {\n      this.setState({\n        nowPlaying: {\n          name: response.item.name,\n          image: response.item.album.images[0].url,\n        },\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"background\">\n        <Router>\n          <Route path=\"/\" component={MainPage} />\n          <Route path=\"/youtube\" component={Youtube} />\n          <Link to=\"/pages/index\"></Link>\n        </Router> \n        <div>\n          <Card id=\"App-card\">\n            <Card.Img\n              src={require(\"./images/spotify-youtube.jpg\")}\n              alt=\"Spotify-Youtube\"\n            />\n            <a href=\"http://localhost:8888/login\">\n              <Button id=\"primary-button\" class=\"primary-button\">\n                Login With Spotify\n              </Button>\n            </a>\n          </Card>\n        </div>\n        <div> Now Playing: {this.state.nowPlaying.name} </div>\n        <div>\n          <img src={this.state.nowPlaying.image} />{\" \"}\n        </div>\n        <div>\n          <button onClick={this.getNowPlaying()}>Check Now Playing</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}