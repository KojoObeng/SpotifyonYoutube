{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kwadw\\\\OneDrive\\\\Documents\\\\Grind\\\\Projects\\\\React Projects\\\\Spotify\\\\spotify\\\\src\\\\components\\\\PlaylistButton.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Spotify from \"spotify-web-api-js\";\nimport { Button } from \"react-bootstrap\";\nimport \"../css/pickPlaylist.css\";\nconst spotifyWebApi = new Spotify();\n\nclass PlaylistButton extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tracks: [],\n      numOfTracks: 0\n    };\n    this.handleClick.bind(this);\n  }\n\n  handleClick(playlistID) {\n    this.tracklist = [];\n    this.tracks = [];\n    this.tracklists = [];\n    this.numOfTracks = 0;\n    spotifyWebApi.getPlaylistTracks(playlistID).then(response => {\n      this.numOfTracks = response.total;\n\n      for (let i = 0; i < Math.ceil(this.numOfTracks / 100); i++) {\n        this.tracks.push(i);\n      }\n\n      this.tracks.forEach(number => {\n        this.tracks[number] = spotifyWebApi.getPlaylistTracks(playlistID, {\n          offset: number * 100\n        });\n      });\n      Promise.all(this.tracks).then(response => {\n        console.log(response);\n        this.tracklist.push(...response.map(hundred_tracks => {\n          return hundred_tracks.items;\n        }));\n        this.tracklist = this.tracklist.flat;\n        console.log(this.tracklist);\n      });\n      console.log(this.tracklist); // this.tracks.forEach((promise) => {\n      //     promise.then((result) => {this.tracklist.push(...result.items)})\n      // })\n    }); // console.log(this.tracklist.length)\n    // console.log(\n    //     this.tracklist.map(item => {\n    //         return  ({\n    //             album_name: item.track.album.name,\n    //             album_images: item.track.album.images,\n    //             artists: item.track.artists.map((artist) => {return artist.name}),\n    //             duration: item.track.duration_ms,\n    //             track_name: item.track.name,\n    //             date: item.added_at,\n    //         }) \n    //     })\n    // )\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"playlist-button-and-image-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"playlist-button\",\n      onClick: () => {\n        this.handleClick(this.props.id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, this.props.name), /*#__PURE__*/React.createElement(\"img\", {\n      className: \"playlist-image\",\n      src: this.props.image,\n      alt: this.props.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: \"/youtube\",\n        playlist: \"x\",\n        tracks: this.state.tracks\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }));\n  }\n\n} // <Button className=\"playlist-number\">{this.props.index} </Button>\n\n\nexport default PlaylistButton;","map":{"version":3,"sources":["C:/Users/Kwadw/OneDrive/Documents/Grind/Projects/React Projects/Spotify/spotify/src/components/PlaylistButton.js"],"names":["React","Component","Link","Spotify","Button","spotifyWebApi","PlaylistButton","constructor","props","state","tracks","numOfTracks","handleClick","bind","playlistID","tracklist","tracklists","getPlaylistTracks","then","response","total","i","Math","ceil","push","forEach","number","offset","Promise","all","console","log","map","hundred_tracks","items","flat","render","id","name","image","pathname","playlist"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {Link} from \"react-router-dom\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Spotify from \"spotify-web-api-js\";\r\nimport {\r\n    Button\r\n  } from \"react-bootstrap\";\r\nimport \"../css/pickPlaylist.css\"\r\n\r\nconst spotifyWebApi = new Spotify();\r\n\r\nclass PlaylistButton extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tracks: [],\r\n            numOfTracks: 0,\r\n        }\r\n        this.handleClick.bind(this);\r\n    }\r\n    handleClick(playlistID) {\r\n        this.tracklist = [];\r\n        this.tracks = [];\r\n        this.tracklists = [];\r\n        this.numOfTracks = 0\r\n        spotifyWebApi.getPlaylistTracks(playlistID).then((response) => {\r\n            this.numOfTracks = response.total\r\n            for (let i=0; i < Math.ceil(this.numOfTracks / 100); i++) {\r\n                this.tracks.push(i);\r\n            }\r\n            this.tracks.forEach((number) => {\r\n                this.tracks[number] = spotifyWebApi.getPlaylistTracks(playlistID, {offset: number*100})\r\n            })\r\n            Promise.all(this.tracks).then((response) => {\r\n                console.log(response)\r\n                this.tracklist.push(...response.map(hundred_tracks => {\r\n                    return hundred_tracks.items \r\n                })) \r\n                this.tracklist = this.tracklist.flat\r\n                console.log(this.tracklist)\r\n            })\r\n            console.log(this.tracklist)\r\n\r\n\r\n            // this.tracks.forEach((promise) => {\r\n            //     promise.then((result) => {this.tracklist.push(...result.items)})\r\n            // })\r\n    })\r\n        \r\n        // console.log(this.tracklist.length)\r\n        // console.log(\r\n        //     this.tracklist.map(item => {\r\n        //         return  ({\r\n        //             album_name: item.track.album.name,\r\n        //             album_images: item.track.album.images,\r\n        //             artists: item.track.artists.map((artist) => {return artist.name}),\r\n        //             duration: item.track.duration_ms,\r\n        //             track_name: item.track.name,\r\n        //             date: item.added_at,\r\n        //         }) \r\n        //     })\r\n        // )\r\n        \r\n    }\r\n\r\n    render () {\r\n        return(\r\n            <div className=\"playlist-button-and-image-container\">\r\n            <Button className=\"playlist-button\" onClick={() => {this.handleClick(this.props.id)}}>{this.props.name}</Button>\r\n            <img className=\"playlist-image\" src={this.props.image} alt={this.props.name}/>\r\n            <Link to= {{\r\n                pathname: \"/youtube\",\r\n                playlist: \"x\",\r\n                tracks: this.state.tracks,\r\n            }}>\r\n            </Link>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n// <Button className=\"playlist-number\">{this.props.index} </Button>\r\nexport default PlaylistButton"]},"metadata":{},"sourceType":"module"}