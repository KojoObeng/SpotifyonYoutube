{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kwadw\\\\OneDrive\\\\Documents\\\\Grind\\\\Projects\\\\React Projects\\\\Spotify\\\\spotify\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container, Row, Col, Alert, Breadcrumb, Button, Card, Form, Navbar } from \"react-bootstrap\";\nimport Spotify from \"spotify-web-api-js\";\n\nvar express = require(\"express\");\n\nvar app = express();\nconst spotifyWebApi = new Spotify();\n\nclass App extends Component {\n  constructor() {\n    super();\n    const params = this.getHashParams();\n    this.state = {\n      loggedIn: params.access_token ? true : false,\n      nowPlaying: {\n        name: \"Not Checked\",\n        image: \"k\"\n      }\n    };\n\n    if (params.access_token) {\n      spotifyWebApi.setAccessToken(params.access_token);\n    }\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n\n    while (e = r.exec(q)) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n\n    return hashParams;\n  }\n\n  getNowPlaying() {\n    spotifyWebApi.getMyCurrentPlaybackState().then(response => {\n      this.setState({\n        nowPlaying: {\n          name: response.item.name,\n          image: response.item.album.images[0].url\n        }\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"background\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      className: \"App-navbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, \"Kojo Obeng-Arhin\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      id: \"App-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card.Img, {\n      src: require(\"./images/spotify-youtube.jpg\"),\n      alt: \"Spotify-Youtube\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"http://localhost:8888/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      id: \"primary-button\",\n      class: \"primary-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }, \"Login With Spotify\")))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Kwadw/OneDrive/Documents/Grind/Projects/React Projects/Spotify/spotify/src/App.js"],"names":["React","Component","Container","Row","Col","Alert","Breadcrumb","Button","Card","Form","Navbar","Spotify","express","require","app","spotifyWebApi","App","constructor","params","getHashParams","state","loggedIn","access_token","nowPlaying","name","image","setAccessToken","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","getNowPlaying","getMyCurrentPlaybackState","then","response","setState","item","album","images","url","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,WAAP;AACA,OAAO,sCAAP;AACA,SACEC,SADF,EAEEC,GAFF,EAGEC,GAHF,EAIEC,KAJF,EAKEC,UALF,EAMEC,MANF,EAOEC,IAPF,EAQEC,IARF,EASEC,MATF,QAUO,iBAVP;AAWA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA,IAAIC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIC,GAAG,GAAGF,OAAO,EAAjB;AAEA,MAAMG,aAAa,GAAG,IAAIJ,OAAJ,EAAtB;;AAEA,MAAMK,GAAN,SAAkBf,SAAlB,CAA4B;AAC1BgB,EAAAA,WAAW,GAAG;AACZ;AACA,UAAMC,MAAM,GAAG,KAAKC,aAAL,EAAf;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAEH,MAAM,CAACI,YAAP,GAAsB,IAAtB,GAA6B,KAD5B;AAEXC,MAAAA,UAAU,EAAE;AACVC,QAAAA,IAAI,EAAE,aADI;AAEVC,QAAAA,KAAK,EAAE;AAFG;AAFD,KAAb;;AAOA,QAAIP,MAAM,CAACI,YAAX,EAAyB;AACvBP,MAAAA,aAAa,CAACW,cAAd,CAA6BR,MAAM,CAACI,YAApC;AACD;AACF;;AAEDH,EAAAA,aAAa,GAAG;AACd,QAAIQ,UAAU,GAAG,EAAjB;AACA,QAAIC,CAAJ;AAAA,QACEC,CAAC,GAAG,sBADN;AAAA,QAEEC,CAAC,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,SAArB,CAA+B,CAA/B,CAFN;;AAGA,WAAQN,CAAC,GAAGC,CAAC,CAACM,IAAF,CAAOL,CAAP,CAAZ,EAAwB;AACtBH,MAAAA,UAAU,CAACC,CAAC,CAAC,CAAD,CAAF,CAAV,GAAmBQ,kBAAkB,CAACR,CAAC,CAAC,CAAD,CAAF,CAArC;AACD;;AACD,WAAOD,UAAP;AACD;;AAEDU,EAAAA,aAAa,GAAG;AACdtB,IAAAA,aAAa,CAACuB,yBAAd,GAA0CC,IAA1C,CAAgDC,QAAD,IAAc;AAC3D,WAAKC,QAAL,CAAc;AACZlB,QAAAA,UAAU,EAAE;AACVC,UAAAA,IAAI,EAAEgB,QAAQ,CAACE,IAAT,CAAclB,IADV;AAEVC,UAAAA,KAAK,EAAEe,QAAQ,CAACE,IAAT,CAAcC,KAAd,CAAoBC,MAApB,CAA2B,CAA3B,EAA8BC;AAF3B;AADA,OAAd;AAMD,KAPD;AAQD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,GAAN;AACE,MAAA,GAAG,EAAEjC,OAAO,CAAC,8BAAD,CADd;AAEE,MAAA,GAAG,EAAC,iBAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAKE;AAAG,MAAA,IAAI,EAAC,wBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,gBAAX;AAA4B,MAAA,KAAK,EAAC,gBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,CALF,CADF,CAJF,CADF;AA6BD;;AApEyB;;AAuE5B,eAAeG,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {\n  Container,\n  Row,\n  Col,\n  Alert,\n  Breadcrumb,\n  Button,\n  Card,\n  Form,\n  Navbar,\n} from \"react-bootstrap\";\nimport Spotify from \"spotify-web-api-js\";\n\nvar express = require(\"express\");\nvar app = express();\n\nconst spotifyWebApi = new Spotify();\n\nclass App extends Component {\n  constructor() {\n    super();\n    const params = this.getHashParams();\n    this.state = {\n      loggedIn: params.access_token ? true : false,\n      nowPlaying: {\n        name: \"Not Checked\",\n        image: \"k\",\n      },\n    };\n    if (params.access_token) {\n      spotifyWebApi.setAccessToken(params.access_token);\n    }\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n      r = /([^&;=]+)=?([^&;]*)/g,\n      q = window.location.hash.substring(1);\n    while ((e = r.exec(q))) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n    return hashParams;\n  }\n\n  getNowPlaying() {\n    spotifyWebApi.getMyCurrentPlaybackState().then((response) => {\n      this.setState({\n        nowPlaying: {\n          name: response.item.name,\n          image: response.item.album.images[0].url,\n        },\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"background\">\n        <div className=\"App\">\n          <Navbar className=\"App-navbar\">Kojo Obeng-Arhin</Navbar>\n        </div>\n        <div>\n          <Card id=\"App-card\">\n            <Card.Img\n              src={require(\"./images/spotify-youtube.jpg\")}\n              alt=\"Spotify-Youtube\"\n            />\n            <a href=\"http://localhost:8888/\">\n              <Button id=\"primary-button\" class=\"primary-button\">\n                Login With Spotify\n              </Button>\n            </a>\n          </Card>\n        </div>\n        {/* <div>Now Playing: {this.state.nowPlaying.name} </div>\n        <div>\n          <img src={this.state.nowPlaying.image} />\n        </div>\n        <div>\n          <button onClick={() => this.getNowPlaying()}>\n            Check Now Playing\n          </button>\n        </div> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}